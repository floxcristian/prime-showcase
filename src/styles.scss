/* You can add global styles to this file, and also import other style files */
@use "primeicons/primeicons.css";
@use "tailwindcss";
@plugin 'tailwindcss-primeui';

/* Mejoras para los cards de PrimeNG */
.p-card {
  /* Borde más visible y uniforme en todos los lados */
  border: 1px solid rgb(var(--p-surface-300)) !important;
  
  /* Sombra más definida para separar del fondo */
  box-shadow: 
    0 1px 3px 0 rgba(0, 0, 0, 0.12), 
    0 1px 2px 0 rgba(0, 0, 0, 0.08),
    0 0 0 1px rgba(0, 0, 0, 0.05) !important;
  
  /* Transición suave para hover */
  transition: all 0.2s ease-in-out !important;
  
  /* Fondo con contraste sutil */
  background: rgb(var(--p-surface-0)) !important;
  
  /* Asegurar que los bordes redondeados se mantengan */
  border-radius: 0.75rem !important;
  overflow: hidden !important;
  
  /* Posición relativa para el pseudo-elemento */
  position: relative !important;
  
  /* Asegurar que no haya margin que cause separaciones irregulares */
  margin: 0 !important;
}

/* Pseudo-elemento para reforzar el borde superior */
.p-card::before {
  content: '' !important;
  position: absolute !important;
  top: 0 !important;
  left: 0 !important;
  right: 0 !important;
  height: 1px !important;
  background: rgb(var(--p-surface-400)) !important;
  z-index: 1 !important;
}

/* Modo oscuro */
.p-card:where(.dark, [data-pc-theme="dark"]) {
  border: 1px solid rgb(var(--p-surface-600)) !important;
  box-shadow: 
    0 1px 3px 0 rgba(0, 0, 0, 0.3), 
    0 1px 2px 0 rgba(0, 0, 0, 0.2),
    0 0 0 1px rgba(255, 255, 255, 0.05) !important;
  background: rgb(var(--p-surface-900)) !important;
}

.p-card:where(.dark, [data-pc-theme="dark"])::before {
  background: rgb(var(--p-surface-500)) !important;
}

/* Efecto hover para mejor interactividad */
.p-card:hover {
  border-color: rgb(var(--p-surface-400)) !important;
  box-shadow: 
    0 4px 6px -1px rgba(0, 0, 0, 0.15), 
    0 2px 4px -1px rgba(0, 0, 0, 0.1),
    0 0 0 1px rgba(0, 0, 0, 0.08) !important;
  transform: translateY(-1px) !important;
}

.p-card:hover::before {
  background: rgb(var(--p-surface-500)) !important;
}

.p-card:hover:where(.dark, [data-pc-theme="dark"]) {
  border-color: rgb(var(--p-surface-500)) !important;
  box-shadow: 
    0 4px 6px -1px rgba(0, 0, 0, 0.4), 
    0 2px 4px -1px rgba(0, 0, 0, 0.3),
    0 0 0 1px rgba(255, 255, 255, 0.1) !important;
}

.p-card:hover:where(.dark, [data-pc-theme="dark"])::before {
  background: rgb(var(--p-surface-400)) !important;
}

/* Header del card con borde inferior más definido */
.p-card .p-card-header {
  border-bottom: 1px solid rgb(var(--p-surface-300)) !important;
  background: rgb(var(--p-surface-50)) !important;
  position: relative !important;
  z-index: 2 !important;
}

.p-card .p-card-header:where(.dark, [data-pc-theme="dark"]) {
  border-bottom-color: rgb(var(--p-surface-600)) !important;
  background: rgb(var(--p-surface-800)) !important;
}

/* Body del card con padding consistente */
.p-card .p-card-body {
  padding: 1.5rem !important;
  position: relative !important;
  z-index: 2 !important;
}

/* Footer del card con borde superior */
.p-card .p-card-footer {
  border-top: 1px solid rgb(var(--p-surface-300)) !important;
  background: rgb(var(--p-surface-50)) !important;
  position: relative !important;
  z-index: 2 !important;
}

.p-card .p-card-footer:where(.dark, [data-pc-theme="dark"]) {
  border-top-color: rgb(var(--p-surface-600)) !important;
  background: rgb(var(--p-surface-800)) !important;
}

/* Título del card con mejor contraste */
.p-card .p-card-title {
  color: rgb(var(--p-surface-900)) !important;
  font-weight: 600 !important;
}

.p-card .p-card-title:where(.dark, [data-pc-theme="dark"]) {
  color: rgb(var(--p-surface-100)) !important;
}

/* Subtítulo del card */
.p-card .p-card-subtitle {
  color: rgb(var(--p-surface-600)) !important;
}

.p-card .p-card-subtitle:where(.dark, [data-pc-theme="dark"]) {
  color: rgb(var(--p-surface-400)) !important;
}

/* Contenido del card */
.p-card .p-card-content {
  color: rgb(var(--p-surface-700)) !important;
  line-height: 1.6 !important;
}

.p-card .p-card-content:where(.dark, [data-pc-theme="dark"]) {
  color: rgb(var(--p-surface-300)) !important;
}

/* Responsive: ajustar padding en pantallas pequeñas */
@media (max-width: 768px) {
  .p-card .p-card-body {
    padding: 1rem !important;
  }
}

/* Mejorar la visibilidad en contenedores con fondo claro */
.bg-surface-0 .p-card,
.bg-white .p-card {
  border-color: rgb(var(--p-surface-400)) !important;
}

.bg-surface-0 .p-card::before,
.bg-white .p-card::before {
  background: rgb(var(--p-surface-500)) !important;
}

/* Mejorar la visibilidad en contenedores con fondo oscuro */
.bg-surface-900 .p-card,
.bg-surface-950 .p-card {
  border-color: rgb(var(--p-surface-500)) !important;
}

.bg-surface-900 .p-card::before,
.bg-surface-950 .p-card::before {
  background: rgb(var(--p-surface-400)) !important;
}

/* Asegurar que el contenido no se superponga con el pseudo-elemento */
.p-card > * {
  position: relative !important;
  z-index: 2 !important;
}

/* ===== MASONRY LAYOUT OPTIMIZADO ===== */

/* Contenedor principal - FORZAR ANCHO COMPLETO */
.masonry-container {
  display: flex;
  flex-direction: column;
  gap: 2rem;
  width: 100% !important;
  max-width: none !important;
  min-width: 100% !important;
}

/* Grid masonry con distribución FORZADA a 3 columnas */
.masonry-grid {
  /* Masonry nativo para navegadores compatibles */
  display: grid !important;
  /* FORZAR EXACTAMENTE 3 COLUMNAS sin importar el ancho */
  grid-template-columns: repeat(3, 1fr) !important;
  grid-template-rows: masonry;
  gap: 1.5rem !important;
  align-items: start;
  width: 100% !important;
  max-width: none !important;
  justify-content: stretch;
  grid-auto-flow: column;
}

/* Fallback para navegadores sin soporte masonry */
@supports not (grid-template-rows: masonry) {
  .masonry-grid {
    /* Usar CSS columns como fallback */
    display: block !important;
    columns: 3 !important;
    column-gap: 1.5rem !important;
    column-fill: balance;
    width: 100% !important;
    column-width: auto !important;
  }
  
  .masonry-item {
    /* Evitar que los items se rompan entre columnas */
    break-inside: avoid;
    page-break-inside: avoid;
    display: inline-block;
    width: 100%;
    margin-bottom: 1.5rem;
    vertical-align: top;
  }
  
  /* Item que ocupa todo el ancho en fallback */
  .masonry-item-wide {
    column-span: all;
    margin-bottom: 2rem;
  }
}

/* Para navegadores con soporte masonry */
@supports (grid-template-rows: masonry) {
  .masonry-item {
    position: static;
    margin: 0;
    align-self: start;
    width: 100%;
    justify-self: stretch;
  }
  
  /* Item que ocupa todo el ancho */
  .masonry-item-wide {
    grid-column: 1 / -1;
    margin-top: 1rem;
  }
}

/* ===== RESPONSIVE BREAKPOINTS ESPECÍFICOS ===== */

/* FORZAR 3 COLUMNAS en resoluciones de escritorio */
@media (min-width: 1024px) {
  .masonry-grid {
    /* FORZAR 3 COLUMNAS sin excepción */
    grid-template-columns: repeat(3, 1fr) !important;
    gap: 1.75rem !important;
    width: 100% !important;
    max-width: none !important;
  }
  
  @supports not (grid-template-rows: masonry) {
    .masonry-grid {
      columns: 3 !important;
      column-gap: 1.75rem !important;
      column-width: auto !important;
    }
  }
}

/* Pantallas extra grandes - MANTENER 3 columnas */
@media (min-width: 1800px) {
  .masonry-grid {
    /* MANTENER 3 COLUMNAS incluso en pantallas muy grandes */
    grid-template-columns: repeat(3, 1fr) !important;
    gap: 2rem !important;
  }
  
  @supports not (grid-template-rows: masonry) {
    .masonry-grid {
      columns: 3 !important;
      column-gap: 2rem !important;
    }
  }
}

/* Tablets - 2 columnas */
@media (min-width: 768px) and (max-width: 1023px) {
  .masonry-grid {
    grid-template-columns: repeat(2, 1fr) !important;
    gap: 1.5rem !important;
  }
  
  @supports not (grid-template-rows: masonry) {
    .masonry-grid {
      columns: 2 !important;
      column-gap: 1.5rem !important;
    }
  }
}

/* Móviles - 1 columna */
@media (max-width: 767px) {
  .masonry-container {
    gap: 1.5rem;
  }
  
  .masonry-grid {
    grid-template-columns: 1fr !important;
    gap: 1.5rem !important;
  }
  
  @supports not (grid-template-rows: masonry) {
    .masonry-grid {
      columns: 1 !important;
      column-gap: 0 !important;
    }
    
    .masonry-item {
      margin-bottom: 1.5rem;
    }
    
    .masonry-item-wide {
      margin-bottom: 1.5rem;
      margin-top: 0;
    }
  }
}

/* ===== OPTIMIZACIONES ESPECÍFICAS ===== */

/* Asegurar que los cards mantengan su altura natural */
.masonry-item .p-card {
  height: auto !important;
  min-height: auto !important;
  max-height: none !important;
  width: 100% !important;
  box-sizing: border-box !important;
}

/* Eliminar transformaciones que puedan causar problemas */
.masonry-item {
  transform: none !important;
  will-change: auto !important;
  width: 100% !important;
  box-sizing: border-box !important;
  isolation: isolate;
  overflow: visible;
  position: relative;
}

/* Transiciones suaves */
.masonry-item {
  transition: opacity 0.3s ease-in-out;
}

/* Asegurar que el contenido del card se distribuya correctamente */
.masonry-item .p-card .p-card-body {
  display: flex !important;
  flex-direction: column !important;
  height: auto !important;
}

/* Optimizaciones adicionales para el masonry */
.masonry-grid {
  contain: layout style;
  overflow: visible;
  box-sizing: border-box;
}

/* Asegurar que los cards no tengan margin que interfiera */
.masonry-item > * {
  margin: 0 !important;
}

/* Prevenir problemas de z-index */
.masonry-item {
  z-index: auto;
}

/* Optimización para animaciones */
.masonry-item .p-card {
  backface-visibility: hidden;
  perspective: 1000px;
}

/* Forzar recálculo del layout cuando sea necesario */
.masonry-grid::after {
  content: '';
  display: block;
  clear: both;
  height: 0;
  visibility: hidden;
}

/* Asegurar distribución uniforme en navegadores con masonry */
@supports (grid-template-rows: masonry) {
  .masonry-grid {
    justify-content: stretch;
    align-content: start;
    grid-auto-columns: 1fr;
  }
  
  .masonry-item {
    justify-self: stretch;
    align-self: start;
  }
}

/* Asegurar que el contenedor padre no limite el ancho */
.masonry-container {
  max-width: none !important;
  width: 100% !important;
}

/* FORZADO ESPECÍFICO PARA TU RESOLUCIÓN */
@media (min-width: 1000px) {
  .masonry-grid {
    /* Forzar 3 columnas sin importar el ancho calculado */
    grid-template-columns: repeat(3, 1fr) !important;
    /* Asegurar que las columnas se distribuyan uniformemente */
    justify-content: stretch;
    align-content: start;
    width: 100% !important;
    max-width: none !important;
  }
  
  @supports not (grid-template-rows: masonry) {
    .masonry-grid {
      columns: 3 !important;
      column-width: auto !important;
      width: 100% !important;
    }
  }
}

/* Asegurar que no haya overflow horizontal */
.masonry-container,
.masonry-grid {
  overflow-x: visible;
  max-width: 100%;
}

/* Forzar que las columnas tengan el mismo ancho */
.masonry-grid {
  grid-auto-columns: 1fr;
}

/* Asegurar que los items no se salgan de su columna */
.masonry-item {
  max-width: 100%;
  overflow: hidden;
}

/* Espaciado mejorado para el item wide */
.masonry-item-wide {
  margin-top: 1rem !important;
}

@media (max-width: 767px) {
  .masonry-item-wide {
    margin-top: 0 !important;
  }
}

/* Optimización final para evitar gaps irregulares */
.masonry-grid {
  align-items: stretch;
}

.masonry-item {
  align-self: start;
}

/* Asegurar que el último elemento tenga el espaciado correcto */
.masonry-item-wide:last-child {
  margin-bottom: 0;
}

/* Mejorar la distribución visual */
@supports (grid-template-rows: masonry) {
  .masonry-grid {
    grid-template-rows: masonry;
    grid-auto-flow: column;
  }
}

/* OVERRIDE ESPECÍFICO PARA FORZAR 3 COLUMNAS */
.masonry-grid {
  /* Forzar 3 columnas usando !important */
  grid-template-columns: repeat(3, minmax(0, 1fr)) !important;
  display: grid !important;
  width: 100% !important;
  max-width: none !important;
}

/* Fallback mejorado para mejor compatibilidad */
@supports not (grid-template-rows: masonry) {
  .masonry-grid {
    display: block !important;
    column-count: 3 !important;
    column-gap: 1.5rem !important;
    column-fill: auto !important;
    width: 100% !important;
    column-width: auto !important;
  }
  
  @media (min-width: 1800px) {
    .masonry-grid {
      column-count: 3 !important;
      column-gap: 2rem !important;
    }
  }
  
  @media (max-width: 1023px) {
    .masonry-grid {
      column-count: 2 !important;
    }
  }
  
  @media (max-width: 767px) {
    .masonry-grid {
      column-count: 1 !important;
    }
  }
}

/* FORZAR ANCHO COMPLETO EN EL CONTENEDOR PADRE */
.flex-1.h-full.overflow-y-auto.border.border-surface.rounded-2xl {
  width: 100% !important;
  max-width: none !important;
}

.flex-1.h-full.overflow-y-auto.border.border-surface.rounded-2xl .p-6 {
  width: 100% !important;
  max-width: none !important;
}

/* Asegurar que el contenedor de cards use todo el ancho disponible */
.space-y-8 {
  width: 100% !important;
  max-width: none !important;
}

/* OVERRIDE FINAL PARA GARANTIZAR 3 COLUMNAS */
@media (min-width: 1024px) {
  .masonry-grid {
    grid-template-columns: repeat(3, 1fr) !important;
    display: grid !important;
    gap: 1.75rem !important;
    width: 100% !important;
    max-width: none !important;
    justify-content: stretch !important;
  }
}

/* Asegurar que el grid no se colapse */
.masonry-grid {
  min-height: 200px;
  position: relative;
}

/* Debug temporal para verificar el ancho */
.masonry-grid::before {
  content: '';
  position: absolute;
  top: -10px;
  left: 0;
  right: 0;
  height: 2px;
  background: transparent;
  z-index: -1;
}